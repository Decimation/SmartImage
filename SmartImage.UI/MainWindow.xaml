<!-- ReSharper disable InconsistentNaming -->

<Window x:Name="Wnd_Main" x:Class="SmartImage.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="clr-namespace:SmartImage.UI"
        xmlns:converters="clr-namespace:SmartImage.UI"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d" Height="600" Width="1300" MinWidth="1300" MinHeight="300" Loaded="Wnd_Main_Loaded"
        Closed="Wnd_Main_Closed"
        Closing="Wnd_Main_Closing" Title="SmartImage" Unloaded="Wnd_Main_Unloaded" Background="#FF191919"
        KeyDown="Wnd_Main_KeyDown">
    <Window.Resources>
        <converters:BooleanToBrushConverter x:Key="BooleanToBrushConverter">
            <converters:BooleanToBrushConverter.TrueBrush>
                <SolidColorBrush Color="Green"/>
            </converters:BooleanToBrushConverter.TrueBrush>
            <converters:BooleanToBrushConverter.FalseBrush>
                <SolidColorBrush Color="Red"/>
            </converters:BooleanToBrushConverter.FalseBrush>
        </converters:BooleanToBrushConverter>
        <Style x:Key="CustomContextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="{DynamicResource Black3}" />
            <Setter Property="Foreground" Value="White" />
            <!-- Add more setters for additional properties -->
        </Style>
        <Style x:Key="CustomMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <!-- Left column for icon -->
                                    <ColumnDefinition Width="*" />
                                    <!-- Right column for content -->
                                </Grid.ColumnDefinitions>
                                <Image Source="{TemplateBinding Icon}" Width="16" Height="16"
                                       VerticalAlignment="Center" Margin="5" />
                                <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Define the ContextMenu -->
        <ContextMenu x:Key="ItemContextMenu">
            <MenuItem Header="Open" Click="OpenItem_Click" IsEnabled="{Binding CanOpen}" />
            <MenuItem Header="Scan" Click="ScanItem_Click" IsEnabled="{Binding CanScan}" />
            <MenuItem Header="Download" Click="DownloadItem_Click" IsEnabled="{Binding CanDownload}" />
            <MenuItem Header="Info" Click="InfoItem_Click" />
            <MenuItem Header="Retry" Click="RetryItem_Click" />
            <MenuItem Header="Enqueue" Click="EnqueueItem_Click" IsEnabled="{Binding CanDownload}" />
        </ContextMenu>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="BoldGridViewCellStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="CustomListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />

            <Style.Resources>
                <!-- Define the colors for selection -->
                <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="LightBlue" />
                <SolidColorBrush x:Key="SelectedTextBrush" Color="White" />
            </Style.Resources>
            <!-- <Setter Property="ToolTip" Value="{Binding Result.Info}"/> -->
            <!-- <Setter Property="FontWeight" Value="Bold" /> -->
            <Style.Triggers>

                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="SauceNao">
                    <Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />

                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="EHentai">
                    <Setter Property="Background" Value="MediumPurple" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Iqdb">
                    <Setter Property="Background" Value="LightGreen" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Ascii2D">
                    <Setter Property="Background" Value="Cyan" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="trace.moe">
                    <Setter Property="Background" Value="DodgerBlue" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="RepostSleuth">
                    <Setter Property="Background" Value="Brown" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="ArchiveMoe">
                    <Setter Property="Background" Value="Wheat" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Yandex">
                    <Setter Property="Background" Value="Orange" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <TabControl x:Name="Tc_Main" Background="{DynamicResource Black1}">
            <TabItem x:Name="Ti_Main" Header="Main" KeyDown="Ti_Main_KeyDown">
                <Grid Background="{DynamicResource Black1}">
                    <!--<Grid.RowDefinitions>
                        <RowDefinition Height="47*" />
                        <RowDefinition Height="231*" />
                    </Grid.RowDefinitions>-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!-- Define your rows here -->
                        <RowDefinition Height="*" />
                        <!-- "*" means proportional sizing -->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <!-- Define your columns here -->
                        <ColumnDefinition Width="*" />
                        <!-- "*" means proportional sizing -->
                    </Grid.ColumnDefinitions>
                    <Label x:Name="Lb_Input" Content="Input" HorizontalAlignment="Left" Margin="4,5,0,0"
                           VerticalAlignment="Top" Height="26" FontWeight="Bold" Foreground="White" Padding="5,5,5,5"
                           Background="{DynamicResource Black3}" Width="50" HorizontalContentAlignment="Center" />

                    <!--TextChanged="Tb_Input_TextChanged" TextInput="Tb_Input_TextInput"-->
                    <TextBox x:Name="Tb_Input" HorizontalAlignment="Left" Margin="57,8,0,0" VerticalAlignment="Top"
                             Width="437" Height="20"
                             Drop="Tb_Input_Drop" DragOver="Tb_Input_DragOver"
                             PreviewDragOver="Tb_Input_PreviewDragOver" IsReadOnly="False"
                             Text="{Binding CurrentQueueItem, Mode=TwoWay}" />

                    <Button x:Name="Btn_Run" Content="Run" HorizontalAlignment="Left" Margin="499,8,0,0"
                            VerticalAlignment="Top" Click="Btn_Run_Click" Height="20" FontWeight="Bold"
                            IsEnabled="{Binding IsQueueInputValid}"
                            Loaded="Btn_Run_Loaded" Width="35">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Chartreuse" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border2}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="Btn_Cancel"
                            BorderBrush="{DynamicResource Border2}" Content="Cancel"
                            HorizontalAlignment="Left" Margin="539,8,0,0"
                            VerticalAlignment="Top" Click="Btn_Cancel_Click" Height="20" Width="39">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Yellow" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border1}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <Button x:Name="Btn_Remove" Content="Remove"
                            HorizontalAlignment="Left" Margin="583,8,0,0" VerticalAlignment="Top"
                            Click="Btn_Remove_Click" Height="20" Width="46">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Orange" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border2}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <Button x:Name="Btn_Delete" Content="Delete"
                            HorizontalAlignment="Left" Margin="634,8,0,0" VerticalAlignment="Top"
                            Click="Btn_Delete_Click" Height="20" Width="39">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border2}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <ListBox x:Name="Lb_Queue" Drop="Lb_Queue_Drop"
                             DragOver="Lb_Queue_DragOver" PreviewDragOver="Lb_Queue_PreviewDragOver" AllowDrop="True"
                             Background="{DynamicResource Black2}" Foreground="White"
                             SelectionChanged="Lb_Queue_SelectionChanged"
                             SelectedItem="{Binding CurrentQueueItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"
                             IsSynchronizedWithCurrentItem="True"
                             KeyDown="Lb_Queue_KeyDown" Margin="0,2,173,0" HorizontalAlignment="Right"
                             VerticalAlignment="Top" Width="320" Height="150" Grid.Column="1" Grid.RowSpan="2">

                    </ListBox>
                    <Border x:Name="Br_Preview" Height="150" Margin="0,3,10,0" Width="150"
                            Background="{DynamicResource Black2}"
                            VerticalAlignment="Top" HorizontalAlignment="Right" Grid.RowSpan="2" Panel.ZIndex="1"
                            Grid.Column="1" d:IsLocked="True">

                        <Image x:Name="Img_Preview" MouseLeftButtonDown="Img_Preview_MouseLeftButtonDown"
                               Width="150" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="0">

                            <Image.RenderTransformOrigin>
                                <Point X="1" Y="0"></Point>
                            </Image.RenderTransformOrigin>

                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" CenterX="1" CenterY="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Image.RenderTransform>

                            <Image.Triggers>
                                <EventTrigger RoutedEvent="Image.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="3.5" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="3.5" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Image.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="1" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Image.Triggers>
                        </Image>

                    </Border>
                    <Border x:Name="Br_Preview2" Height="150" Margin="0,2,10,0" Width="150"
                            Background="{DynamicResource Black2}"
                            VerticalAlignment="Top" HorizontalAlignment="Right" Grid.RowSpan="2" Panel.ZIndex="1"
                            Grid.Column="1" Visibility="Hidden" d:IsLocked="True">
                        <MediaElement x:Name="Me_Preview" HorizontalAlignment="Right" VerticalAlignment="Top"
                                      Width="150" MouseDown="Me_Preview_MouseDown">
                            <MediaElement.RenderTransformOrigin>
                                <Point X="1" Y="0"></Point>
                            </MediaElement.RenderTransformOrigin>

                            <MediaElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" CenterX="1" CenterY="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </MediaElement.RenderTransform>

                            <MediaElement.Triggers>
                                <EventTrigger RoutedEvent="MediaElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="2.5" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="2.5" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MediaElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="1" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </MediaElement.Triggers>
                        </MediaElement>
                    </Border>

                    <Label x:Name="Lb_Upload" Content="Upload" HorizontalAlignment="Left" Margin="4,34,0,0"
                           VerticalAlignment="Top" Height="26" FontWeight="Bold" Foreground="White"
                           Background="{DynamicResource Black3}" Width="50" HorizontalContentAlignment="Center" />

                    <TextBox x:Name="Tb_Upload" HorizontalAlignment="Left" Margin="57,37,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="437" IsReadOnly="True" Height="20"
                             MouseDoubleClick="Tb_Upload_MouseDoubleClick" Foreground="White" Background="Black" />

                    <Button x:Name="Btn_Clear" Content="Clear" HorizontalAlignment="Left" Margin="501,0,0,0"
                            VerticalAlignment="Center" Height="20" Click="Btn_Clear_Click">

                    </Button>

                    <Button x:Name="Btn_Restart" Content="Restart" HorizontalAlignment="Left" Margin="537,0,0,0"
                            VerticalAlignment="Center" Click="Btn_Restart_Click"
                            MouseEnter="Btn_Restart_MouseEnter"
                            MouseLeave="Btn_Restart_MouseLeave" Width="49" Height="20" />

                    <Button x:Name="Btn_Reset" Content="Reset" HorizontalAlignment="Left" Margin="591,0,0,0"
                            VerticalAlignment="Center" Click="Btn_Reset_Click" Width="41" Height="20" />
                    <Button x:Name="Btn_Browse" Content="Browse" HorizontalAlignment="Left" Margin="637,0,0,0"
                            VerticalAlignment="Center" Click="Btn_Browse_Click" Height="20" Grid.ColumnSpan="2" />

                    <Label x:Name="Lb_Info" Content="Info" HorizontalAlignment="Left" Margin="4,62,0,0"
                           VerticalAlignment="Top" Height="26" FontWeight="Bold" Foreground="White"
                           Background="{DynamicResource Black3}" HorizontalContentAlignment="Center" Width="50" />

                    <TextBox x:Name="Tb_Info" HorizontalAlignment="Left" Margin="57,65,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="437" IsReadOnly="True" Height="20" Background="Black"
                             Foreground="White" MouseDoubleClick="Tb_Info_MouseDoubleClick" />

                    <Image x:Name="Img_Status" HorizontalAlignment="Left" Height="20px" Width="20px"
                           Margin="10,5,0,0"
                           VerticalAlignment="Top" Stretch="None" Grid.Row="1" />

                    <ProgressBar x:Name="Pb_Status" HorizontalAlignment="Left" Height="10" Margin="4,54,0,0"
                                 VerticalAlignment="Top" Width="100" Minimum="0" Maximum="100" Grid.Row="1" />

                    <ListView x:Name="Lv_Results" Margin="0,70,0,0"
                              MouseDoubleClick="Lv_Results_MouseDoubleClick"
                              Foreground="White"
                              IsSynchronizedWithCurrentItem="True"
                              Background="{DynamicResource Black2}"
                              SelectedItem="{Binding CurrentResultItem, Mode=TwoWay}"
                              ItemContainerStyle="{StaticResource CustomListViewItemStyle}"
                              MouseRightButtonDown="Lv_Results_MouseRightButtonDown"
                              SelectionChanged="Lv_Results_SelectionChanged" KeyDown="Lv_Results_KeyDown"
                              ScrollViewer.CanContentScroll="True" Grid.Row="1" Grid.ColumnSpan="2">

                        <!--<ListView.View>
                            <GridView>
                                <GridViewColumn/>
                            </GridView>
                        </ListView.View>-->

                        <ListView.View>
                            <GridView>

                                <GridViewColumn Header="Status">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image x:Name="Img_Status"
                                                   Source="{Binding StatusImage, UpdateSourceTrigger=PropertyChanged}"
                                                   Width="20"
                                                   Height="20" Stretch="None" ToolTip="{Binding Status}">

                                                <!--<Image.RenderTransformOrigin>
                                                    <Point X="0" Y="1"></Point>
                                                </Image.RenderTransformOrigin>

                                                <Image.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="1" ScaleY="1" CenterX="0" CenterY="1" />
                                                        <TranslateTransform X="0" Y="0" />
                                                    </TransformGroup>
                                                </Image.RenderTransform>

                                                <Image.Triggers>
                                                    <EventTrigger RoutedEvent="Image.MouseEnter">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="Img_Status"
                                                                    Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                    To="2.5" Duration="0:0:0.2" />
                                                                <DoubleAnimation Storyboard.TargetName="Img_Status"
                                                                    Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                    To="2.5" Duration="0:0:0.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                    <EventTrigger RoutedEvent="Image.MouseLeave">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="Img_Status"
                                                                    Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                    To="1" Duration="0:0:0.2" />
                                                                <DoubleAnimation Storyboard.TargetName="Img_Status"
                                                                    Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                    To="1" Duration="0:0:0.2" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Image.Triggers>-->
                                            </Image>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Name"
                                                Width="120" x:Name="Lvgvc_Name">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name, Mode=OneTime}"
                                                       Style="{StaticResource BoldGridViewCellStyle}" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="URL"
                                                DisplayMemberBinding="{Binding Url, Mode=OneTime}" Width="400" />

                                <GridViewColumn Header="Similarity"
                                                DisplayMemberBinding="{Binding Result.Similarity, Mode=OneTime}"
                                                Width="75">

                                </GridViewColumn>

                                <GridViewColumn Header="Description"
                                                Width="200" x:Name="Lvgvc_Desc">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Result.Description, Mode=OneTime}"
                                                       TextWrapping="Wrap" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Artist"
                                                DisplayMemberBinding="{Binding Result.Artist, Mode=OneTime}"
                                                Width="75" />

                                <GridViewColumn Header="Title"
                                                Width="75" x:Name="Lvgvc_Title">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Result.Title, Mode=OneTime}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Source"
                                                DisplayMemberBinding="{Binding Result.Source, Mode=OneTime}" Width="75" />

                                <GridViewColumn Header="Character"
                                                DisplayMemberBinding="{Binding Result.Character, Mode=OneTime}"
                                                Width="75" />
                                <GridViewColumn Header="Site"
                                                DisplayMemberBinding="{Binding Result.Site, Mode=OneTime}" Width="75" />

                                <GridViewColumn Header="Width"
                                                DisplayMemberBinding="{Binding Width}" Width="50" />

                                <GridViewColumn Header="Height"
                                                DisplayMemberBinding="{Binding Height}" Width="50" />
                            </GridView>
                        </ListView.View>

                    </ListView>

                    <Image x:Name="Img_Type" Width="20px" Height="20px" Stretch="None" Margin="48,5,0,0"
                           HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" />
                    <TextBlock x:Name="Tb_Status" HorizontalAlignment="Left" Margin="4,33,0,0"
                               VerticalAlignment="Top" Foreground="White" FontStyle="Italic" Grid.Row="1" />

                    <TextBlock x:Name="Tb_Status2" HorizontalAlignment="Left" Margin="115,49,0,0"
                               VerticalAlignment="Top" Foreground="White" Grid.Row="1" TextDecorations="Underline" />
                    <Button x:Name="Btn_Filter" Content="Filter" HorizontalAlignment="Left" Margin="501,65,0,0"
                            VerticalAlignment="Top" Click="Btn_Filter_Click" />
                    <TextBox x:Name="Tb_Search" HorizontalAlignment="Right" Margin="0,46,498,0" Grid.Row="1"
                             TextWrapping="Wrap" VerticalAlignment="Top" Width="169"
                             TextChanged="Tb_Search_TextChanged" Grid.ColumnSpan="2" />
                    <ComboBox x:Name="Cb_SearchFields" HorizontalAlignment="Right" Margin="0,17,498,0" Grid.Row="1"
                              VerticalAlignment="Top" Width="129" Grid.ColumnSpan="2" />
                </Grid>
            </TabItem>
            <TabItem x:Name="Ti_Config" HorizontalAlignment="Center" Height="20" Header="Config"
                     VerticalAlignment="Center" Width="54">
                <Grid Background="{DynamicResource Black1}">
                    <ListBox x:Name="Lb_Engines" d:ItemsSource="{Binding Engines}" Margin="27,33,0,0"
                             SelectionMode="Multiple" SelectionChanged="Lb_Engines_SelectionChanged" Width="175"
                             VerticalAlignment="Top" HorizontalAlignment="Left" Height="400" />

                    <ListBox x:Name="Lb_Engines2" d:ItemsSource="{Binding Engines}" Margin="228,33,0,0"
                             SelectionMode="Multiple" SelectionChanged="Lb_Engines2_SelectionChanged" Width="175"
                             HorizontalAlignment="Left" VerticalAlignment="Top" Height="400" />

                    <CheckBox x:Name="Cb_Clipboard" Content="Clipboard"
                              IsChecked="{Binding Path=UseClipboard, Mode=TwoWay}" HorizontalAlignment="Left"
                              Margin="426,36,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_AutoSearch" Content="Auto-search"
                              IsChecked="{Binding Path=Config.AutoSearch, Mode=TwoWay}" HorizontalAlignment="Left"
                              Margin="426,65,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_OpenRaw" Content="Open raw"
                              IsChecked="{Binding Path=Config.OpenRaw, Mode=TwoWay}" HorizontalAlignment="Left"
                              Margin="426,96,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_ContextMenu" Content="Context menu" HorizontalAlignment="Left"
                              IsChecked="{Binding Path=UseContextMenu, Mode=TwoWay}"
                              Margin="426,127,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_Path" Content="Add to PATH" HorizontalAlignment="Left"
                              IsChecked="{Binding InPath, Mode=TwoWay}"
                              Margin="426,154,0,0" VerticalAlignment="Top" Foreground="White" />
                    <Label x:Name="Lbl_SearchEngines" Content="Search Engines" HorizontalAlignment="Left"
                           Margin="27,2,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />

                    <Label x:Name="Lbl_PriorityEngines" Content="Priority Engines" HorizontalAlignment="Left"
                           Margin="228,2,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />

                    <RadioButton x:Name="Rb_UploadEngine_Catbox" Content="Catbox" HorizontalAlignment="Left"
                                 Margin="599,33,0,0" VerticalAlignment="Top" GroupName="Rb_UploadEngines"
                                 Foreground="White" Checked="Rb_UploadEngine_Catbox_Checked" />

                    <RadioButton x:Name="Rb_UploadEngine_Litterbox" Content="Litterbox" HorizontalAlignment="Left"
                                 Margin="599,53,0,0" VerticalAlignment="Top" GroupName="Rb_UploadEngines"
                                 Foreground="White" Checked="Rb_UploadEngine_Litterbox_Checked" />
                    <Label x:Name="Lbl_Options" Content="Options" HorizontalAlignment="Left"
                           Margin="426,3,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />
                    <TextBox x:Name="Tb_EhUsername" HorizontalAlignment="Left" Margin="527,208,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="120"
                             Text="{Binding Config.EhUsername, Mode=TwoWay}" TextChanged="Tb_EhUsername_TextChanged" />
                    <TextBox x:Name="Tb_EhPassword" HorizontalAlignment="Left" Margin="527,237,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="120"
                             Text="{Binding Config.EhPassword, Mode=TwoWay}" TextChanged="Tb_EhPassword_TextChanged" />
                    <Label x:Name="Lb_EhUsername" Content="Eh Username" HorizontalAlignment="Left" Margin="424,204,0,0"
                           VerticalAlignment="Top" Foreground="White" />
                    <Label x:Name="Lb_EhPassword" Content="Eh Password" HorizontalAlignment="Left" Margin="424,233,0,0"
                           VerticalAlignment="Top" Foreground="White" />
                    <Label x:Name="Lbl_UploadEngines" Content="Upload Engine" HorizontalAlignment="Left"
                           Margin="600,3,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />
                    <TextBox x:Name="Tb_HyEndpoint" HorizontalAlignment="Left" Margin="527,297,0,0" TextWrapping="Wrap"
                        VerticalAlignment="Top" Width="120"
                        Text="{Binding Config.HydrusEndpoint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox x:Name="Tb_HyKey" HorizontalAlignment="Left" Margin="527,326,0,0" TextWrapping="Wrap"
                        VerticalAlignment="Top" Width="120"
                        Text="{Binding Config.HydrusKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Label x:Name="Lb_HyEndpoint" Content="Hydrus Endpoint" HorizontalAlignment="Left" Margin="424,293,0,0"
                        VerticalAlignment="Top" Foreground="White" />
                    <Label x:Name="Lb_HyKey" Content="Hydrus Key" HorizontalAlignment="Left" Margin="424,322,0,0"
                        VerticalAlignment="Top" Foreground="White" />

                </Grid>
            </TabItem>
            <TabItem x:Name="Ti_Info" HorizontalAlignment="Center" Height="20" Header="Info" VerticalAlignment="Center"
                     Width="54">
                <Grid Background="{DynamicResource Black1}">
                    <Label x:Name="Lb_Version" Content="Current version" HorizontalAlignment="Left" Margin="10,21,0,0"
                           VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />
                    <TextBlock x:Name="Tb_Version" HorizontalAlignment="Left" Margin="112,26,0,0" TextWrapping="Wrap"
                               VerticalAlignment="Top" Foreground="White" Width="115" />
                    <Button x:Name="Btn_OpenFolder" Content="Open program folder" HorizontalAlignment="Left"
                            Margin="10,162,0,0" VerticalAlignment="Top" Click="Btn_OpenFolder_Click" />
                    <ListView x:Name="Lv_Logs" ItemsSource="{Binding Logs}"
                              Foreground="White"
                              Background="{DynamicResource Black2}"
                              Margin="0,193,0,0">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Time" Width="75" DisplayMemberBinding="{Binding Time}" />
                                <GridViewColumn Header="Message" Width="750" DisplayMemberBinding="{Binding Message}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Label x:Name="Lb_Version2" Content="Latest version" HorizontalAlignment="Left" Margin="10,52,0,0"
                           VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />
                    <TextBlock x:Name="Tb_Version2" HorizontalAlignment="Left" Margin="103,57,0,0" TextWrapping="Wrap"
                               VerticalAlignment="Top" Foreground="White" Width="124" />
                    <Button x:Name="Btn_OpenWiki" Content="Open wiki" HorizontalAlignment="Left" Margin="10,132,0,0"
                            VerticalAlignment="Top" Width="70" Click="Btn_OpenWiki_Click" />
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>