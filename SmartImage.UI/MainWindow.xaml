<!-- ReSharper disable InconsistentNaming -->
<!-- ReSharper disable XamlBindingWithoutMode -->

<Window x:Name="Wnd_Main" x:Class="SmartImage.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="clr-namespace:SmartImage.UI"
        xmlns:converters="clr-namespace:SmartImage.UI"
        xmlns:controls="clr-namespace:SmartImage.UI.Controls"
        xmlns:model="clr-namespace:SmartImage.UI.Model"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:model1="clr-namespace:SmartImage.Lib.Model;assembly=SmartImage.Lib"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d" Height="675" Width="1400" MinWidth="1400" MinHeight="325" Loaded="Wnd_Main_Loaded"
        Closed="Wnd_Main_Closed"
        Closing="Wnd_Main_Closing" Title="SmartImage" Unloaded="Wnd_Main_Unloaded" Background="#FF191919"
        KeyDown="Wnd_Main_KeyDown">
    <Window.Resources>
        <!-- <ui:SharedViewModel x:Key="SharedViewModel" /> -->
        <!-- <ui:SharedImageControl x:Key="SharedImage" /> -->
        <controls:UrlConverter x:Key="urlConverter" />
        <controls:UnitStringConverter x:Key="unitConverter" />
        <controls:BoolToStringConverter x:Key="CYesNo" FalseValue="No" TrueValue="Yes" />
        <controls:BoolToStringConverter x:Key="CYesNo2" FalseValue="P" TrueValue="C" />
        <controls:BooleanToBrushConverter x:Key="BooleanToBrushConverter">
            <controls:BooleanToBrushConverter.TrueBrush>
                <SolidColorBrush Color="Green" />
            </controls:BooleanToBrushConverter.TrueBrush>
            <controls:BooleanToBrushConverter.FalseBrush>
                <SolidColorBrush Color="Red" />
            </controls:BooleanToBrushConverter.FalseBrush>
        </controls:BooleanToBrushConverter>
        <controls:EnumToStringConverter x:Key="DefaultEnumToStringConverter" />
        <controls:ResultItemPropertiesToBoolConverter x:Key="ResultItemPropertiesToBoolConverter" />
        <controls:EnumFlagsToStringConverter x:Key="DefaultEnumFlagsToStringConverter" />
        <controls:ImageDimensionConverter x:Key="ImageDimensionConverter" />

        <Style x:Key="CustomContextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="{DynamicResource Black3}" />
            <Setter Property="Foreground" Value="White" />
            <!-- Add more setters for additional properties -->
        </Style>
        <Style x:Key="CustomMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <!-- Left column for icon -->
                                    <ColumnDefinition Width="*" />
                                    <!-- Right column for content -->
                                </Grid.ColumnDefinitions>
                                <Image Source="{TemplateBinding Icon}" Width="16" Height="16"
                                       VerticalAlignment="Center" Margin="5" />
                                <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Define the ContextMenu -->
        <ContextMenu x:Key="ItemContextMenu">
            <MenuItem Header="Open" Click="OpenItem_Click" IsEnabled="{Binding CanOpen}" />
            <MenuItem Header="Scan" Click="ScanItem_Click" IsEnabled="{Binding CanScan}" />

            <MenuItem Header="Download" Click="DownloadItem_Click"
                      IsEnabled="{Binding Properties, Converter={StaticResource ResultItemPropertiesToBoolConverter}, 
                ConverterParameter={x:Static model:ImageSourceProperties.CanDownload}}" />

            <MenuItem Header="Info" Click="InfoItem_Click" />
            <MenuItem Header="Retry" Click="RetryItem_Click" />
            <MenuItem Header="Enqueue" Click="EnqueueItem_Click"
                      IsEnabled="{Binding Properties, Converter={StaticResource ResultItemPropertiesToBoolConverter}, 
                ConverterParameter={x:Static model:ImageSourceProperties.CanDownload}}" />
        </ContextMenu>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <controls:InvertableBooleanToVisibilityConverter x:Key="BooleanVisConverter" />

        <Style x:Key="BoldGridViewCellStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="CustomListViewItemStyle" TargetType="{x:Type ListViewItem}">

            <!-- <Setter Property="Background" Value="LightGray" /> -->
            <!-- <Setter Property="Foreground" Value="Black" /> -->
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontStyle" Value="Italic"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->

            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />

            <Style.Resources>
                <!-- Define the colors for selection -->
                <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="LightBlue" />
                <SolidColorBrush x:Key="SelectedTextBrush" Color="White" />
            </Style.Resources>
            <!-- <Setter Property="ToolTip" Value="{Binding Result.Info}"/> -->
            <!-- <Setter Property="FontWeight" Value="Bold" /> -->
            <Style.Triggers>

                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="SauceNao">
                    <Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="EHentai">
                    <Setter Property="Background" Value="MediumPurple" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Iqdb">
                    <Setter Property="Background" Value="LightGreen" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Ascii2D">
                    <Setter Property="Background" Value="Cyan" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="trace.moe">
                    <Setter Property="Background" Value="DodgerBlue" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="RepostSleuth">
                    <Setter Property="Background" Value="Brown" />
                    <Setter Property="Foreground" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="ArchiveMoe">
                    <Setter Property="Background" Value="Wheat" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Yandex">
                    <Setter Property="Background" Value="Orange" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Iqdb3D">
                    <Setter Property="Background" Value="MediumSeaGreen" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Result.Root.Engine.Name}" Value="Fluffle">
                    <Setter Property="Background" Value="SandyBrown" />
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Result.Root.Engine.IsAdvanced}" Value="False">
                    <!-- <Setter Property="FontStyle" Value="Italic" /> -->
                    <!-- <Setter Property="Opacity" Value="0.6" /> -->
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="#303030" />
                </DataTrigger>

            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <TabControl x:Name="Tc_Main" Background="{DynamicResource Black1}">
            <TabItem x:Name="Ti_Main" Header="Main" KeyDown="Ti_Main_KeyDown">
                <Grid Background="{DynamicResource Black1}">
                    <!--<Grid.RowDefinitions>
                        <RowDefinition Height="47*" />
                        <RowDefinition Height="231*" />
                    </Grid.RowDefinitions>-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!-- Define your rows here -->
                        <RowDefinition Height="*" />
                        <!-- "*" means proportional sizing -->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <!-- Define your columns here -->
                        <ColumnDefinition Width="*" />
                        <!-- "*" means proportional sizing -->
                    </Grid.ColumnDefinitions>
                    <Label x:Name="Lb_Input" Content="Input" HorizontalAlignment="Left" Margin="4,5,0,0"
                           VerticalAlignment="Top" Height="26" FontWeight="Bold" Foreground="White" Padding="5,5,5,5"
                           Background="{DynamicResource Black3}" Width="55" HorizontalContentAlignment="Center" />

                    <!--TextChanged="Tb_Input_TextChanged" TextInput="Tb_Input_TextInput"-->
                    <TextBox x:Name="Tb_Input" HorizontalAlignment="Left" Margin="64,8,0,0" VerticalAlignment="Top"
                             Width="435" Height="20"
                             Drop="Tb_Input_Drop" DragOver="Tb_Input_DragOver"
                             PreviewDragOver="Tb_Input_PreviewDragOver" IsReadOnly="False"
                             TextChanged="Tb_Input_OnTextChanged"
                             Text="{Binding Input, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <Button x:Name="Btn_Run" Content="Run" HorizontalAlignment="Left" Margin="505,8,0,0"
                            VerticalAlignment="Top" Click="Btn_Run_Click" Height="20" FontWeight="Bold"
                            Loaded="Btn_Run_Loaded" Width="35" ToolTip="Run search" IsEnabled="False">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Chartreuse" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border2}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button x:Name="Btn_Reload" Content="Reload" HorizontalAlignment="Left" Margin="545,8,0,0"
                            VerticalAlignment="Top" Click="Btn_Reload_Click"
                            MouseEnter="Btn_Reload_MouseEnter"
                            MouseLeave="Btn_Reload_MouseLeave" Width="49" Height="20"
                            ToolTip="Clear query &amp; results, then reload query &amp; config"
                            IsEnabled="{Binding CanReload, UpdateSourceTrigger=PropertyChanged}" Foreground="#FF0090FF">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Yellow" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border1}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>

                    <Button x:Name="Btn_Cancel"
                            BorderBrush="{DynamicResource Border2}" Content="Cancel"
                            HorizontalAlignment="Left" Margin="599,8,0,0" ToolTip="Cancel current operation(s)"
                            VerticalAlignment="Top" Click="Btn_Cancel_Click" Height="20" Width="39" Grid.ColumnSpan="2">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Yellow" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border1}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <Button x:Name="Btn_Remove" Content="Remove"
                            HorizontalAlignment="Left" Margin="48,8,0,0" VerticalAlignment="Top"
                            Click="Btn_Remove_Click" Height="20" Width="46" ToolTip="Remove query from queue"
                            IsEnabled="{Binding Path=CurrentQuery.HasValue, ElementName=Wnd_Main}"
                            Grid.Column="1">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Orange" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border2}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <Button x:Name="Btn_Delete" Content="Delete"
                            HorizontalAlignment="Left" Margin="98,8,0,0" VerticalAlignment="Top"
                            Click="Btn_Delete_Click" Height="20" Width="39" ToolTip="Delete query file (Recycle Bin)"
                            IsEnabled="{Binding Path=CurrentQuery.CanDelete, UpdateSourceTrigger=PropertyChanged, ElementName=Wnd_Main}"
                            Grid.Column="1">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="BorderBrush" Value="{DynamicResource Border2}" />
                                <Setter Property="Background" Value="{DynamicResource Black2}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Gray" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="DarkGray" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                    </Button>
                    <ListBox x:Name="Lb_Queue" Drop="Lb_Queue_Drop"
                             DragOver="Lb_Queue_DragOver" PreviewDragOver="Lb_Queue_PreviewDragOver" AllowDrop="True"
                             Background="{DynamicResource Black2}" Foreground="White"
                             SelectionChanged="Lb_Queue_SelectionChanged"
                             SelectedItem="{Binding CurrentQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True, ElementName=Wnd_Main}"
                             KeyDown="Lb_Queue_KeyDown" Margin="0,2,174,0" HorizontalAlignment="Right"
                             VerticalAlignment="Top" Width="320" Height="150" Grid.Column="1" Grid.RowSpan="2"
                             ItemsSource="{Binding Queue, UpdateSourceTrigger=PropertyChanged}">
                        <!-- IsSynchronizedWithCurrentItem="True" -->
                        <ListBox.ItemTemplate>
                            <DataTemplate>

                                <TextBlock Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPrimitive}" Value="True">
                                                    <Setter Property="Foreground" Value="LightGray" />
                                                    <Setter Property="ToolTip" Value="Query standby" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding HasQuery}" Value="True">
                                                    <Setter Property="Foreground" Value="Cyan" />
                                                    <Setter Property="ToolTip" Value="Query loaded" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsComplete}" Value="True">
                                                    <Setter Property="Foreground" Value="GreenYellow" />
                                                    <Setter Property="ToolTip" Value="Search complete" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Invalid}" Value="True">
                                                    <Setter Property="Foreground" Value="PaleVioletRed" />
                                                    <Setter Property="ToolTip" Value="Query invalid" />
                                                </DataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Border x:Name="Br_Preview" Height="150" Margin="0,3,11,0" Width="150"
                            Background="{DynamicResource Black2}"
                            VerticalAlignment="Top" HorizontalAlignment="Right" Grid.RowSpan="2" Panel.ZIndex="1"
                            Grid.Column="1"
                            Visibility="{Binding ShowMedia, Converter={StaticResource BooleanVisConverter}, ConverterParameter=Inverted}">

                        <Image x:Name="Img_Preview"
                               Width="150" HorizontalAlignment="Right" VerticalAlignment="Top" Panel.ZIndex="0"
                               Visibility="{Binding ShowMedia, Converter={StaticResource BooleanVisConverter}, ConverterParameter=Inverted}"
                               MouseDown="Img_Preview_MouseDown"
                               MouseRightButtonDown="Img_Preview_MouseRightButtonDown"
                               MouseRightButtonUp="Img_Preview_MouseRightButtonUp">

                            <Image.RenderTransformOrigin>
                                <Point X="1" Y="0"></Point>
                            </Image.RenderTransformOrigin>

                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" CenterX="1" CenterY="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Image.RenderTransform>

                            <Image.Triggers>
                                <EventTrigger RoutedEvent="Image.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="3.5" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="3.5" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Image.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="1" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Img_Preview"
                                                             Storyboard.TargetProperty="(Image.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Image.Triggers>
                        </Image>

                    </Border>

                    <Border x:Name="Br_Preview2" Height="150" Margin="0,2,11,0" Width="150"
                            Background="{DynamicResource Black2}"
                            VerticalAlignment="Top" HorizontalAlignment="Right" Grid.RowSpan="2" Panel.ZIndex="1"
                            Grid.Column="1"
                            Visibility="{Binding ShowMedia, Converter={StaticResource BooleanVisConverter}, ConverterParameter=Normal}">

                        <MediaElement x:Name="Me_Preview" HorizontalAlignment="Right" VerticalAlignment="Top"
                                      Width="150" MouseDown="Me_Preview_MouseDown"
                                      Visibility="{Binding ShowMedia, Converter={StaticResource BooleanVisConverter}, ConverterParameter=Normal}"
                                      MouseRightButtonDown="Me_Preview_MouseRightButtonDown">
                            <MediaElement.RenderTransformOrigin>
                                <Point X="1" Y="0"></Point>
                            </MediaElement.RenderTransformOrigin>

                            <MediaElement.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" CenterX="1" CenterY="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </MediaElement.RenderTransform>

                            <MediaElement.Triggers>
                                <EventTrigger RoutedEvent="MediaElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="2.5" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="2.5" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MediaElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                             To="1" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="Me_Preview"
                                                             Storyboard.TargetProperty="(MediaElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                             To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </MediaElement.Triggers>
                        </MediaElement>
                    </Border>

                    <Label x:Name="Lb_Upload" Content="Upload" HorizontalAlignment="Left" Margin="4,34,0,0"
                           VerticalAlignment="Top" Height="26" FontWeight="Bold" Foreground="White"
                           Background="{DynamicResource Black3}" Width="55" HorizontalContentAlignment="Center" />

                    <TextBox x:Name="Tb_Upload" HorizontalAlignment="Left" Margin="64,37,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="435" IsReadOnly="True" Height="20"
                             MouseDoubleClick="Tb_Upload_MouseDoubleClick" Foreground="White" Background="Black"
                             Text="{Binding CurrentQuery.Query.Upload, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, FallbackValue={}, 
                        Converter={StaticResource urlConverter}, ElementName=Wnd_Main}">

                    </TextBox>

                    <Button x:Name="Btn_Clear" Content="Clear" HorizontalAlignment="Left" Margin="505,0,0,0"
                            VerticalAlignment="Center" Height="20" Click="Btn_Clear_Click"
                            ToolTip="Clear query &amp; results" IsEnabled="{Binding CurrentQuery.IsComplete}" />

                    <Button x:Name="Btn_Reset" Content="Reset" HorizontalAlignment="Left" Margin="543,0,0,0"
                            VerticalAlignment="Center" Click="Btn_Reset_Click" Width="41" Height="20"
                            ToolTip="Reload &amp; reset state" />

                    <Button x:Name="Btn_Browse" Content="Browse" HorizontalAlignment="Left" Margin="28,0,0,0"
                            VerticalAlignment="Center" Click="Btn_Browse_Click" Height="20"
                            ToolTip="Browse for input(s)" Grid.Column="1" />

                    <Label x:Name="Lb_Info" Content="Info" HorizontalAlignment="Left" Margin="4,62,0,0"
                           VerticalAlignment="Top" Height="26" FontWeight="Bold" Foreground="White"
                           Background="{DynamicResource Black3}" HorizontalContentAlignment="Center" Width="55" />

                    <TextBox x:Name="Tb_Info_Type" HorizontalAlignment="Left" Margin="64,65,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="130" IsReadOnly="True" Height="20" Background="Black"
                             Foreground="White" TextAlignment="Center"
                             Text="{Binding CurrentQuery.Query.Image.Info.DefaultMimeType, Mode=OneWay,
                        UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}, ElementName=Wnd_Main, IsAsync=True}" />

                    <TextBox x:Name="Tb_Info_Size" HorizontalAlignment="Left" Margin="217,65,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="130" IsReadOnly="True" Height="20" Background="Black"
                             Foreground="White" TextAlignment="Center"
                             Text="{Binding CurrentQuery.Query.Image.Size, ElementName=Wnd_Main, IsAsync=True, Mode=OneWay, 
                        UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}, Converter={StaticResource unitConverter}}" />

                    <TextBox x:Name="Tb_Info_Dim" HorizontalAlignment="Left" Margin="369,65,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="130" IsReadOnly="True" Height="20" Background="Black"
                             Foreground="White" TextAlignment="Center"
                             Text="{Binding CurrentQuery, ElementName=Wnd_Main, IsAsync=True, Mode=OneWay, FallbackValue=0, 
                        Converter={StaticResource ImageDimensionConverter}, UpdateSourceTrigger=PropertyChanged}" />

                    <Image x:Name="Img_Status" HorizontalAlignment="Left" Height="20px" Width="20px"
                           Margin="10,5,0,0"
                           VerticalAlignment="Top" Stretch="None" Grid.Row="1" />

                    <ListView x:Name="Lv_Results" Margin="0,120,0,0"
                              MouseDoubleClick="Lv_Results_MouseDoubleClick"
                              Foreground="White"
                              Selector.IsSelected="{Binding HasResultSelected, UpdateSourceTrigger=PropertyChanged}"
                              IsSynchronizedWithCurrentItem="True"
                              Background="{DynamicResource Black2}"
                              ItemsSource="{Binding CurrentQuery.Results, IsAsync=False, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding CurrentResult, Mode=TwoWay}"
                              ItemContainerStyle="{DynamicResource CustomListViewItemStyle}"
                              MouseRightButtonDown="Lv_Results_MouseRightButtonDown"
                              SelectionChanged="Lv_Results_SelectionChanged" KeyDown="Lv_Results_KeyDown"
                              ScrollViewer.CanContentScroll="True" Grid.Row="1" Grid.ColumnSpan="2">

                        <!--<ListView.View>
                            <GridView>
                                <GridViewColumn/>
                            </GridView>
                        </ListView.View>-->

                        <ListView.View>

                            <GridView>

                                <!--<GridViewColumn Header="Status">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image x:Name="Img_Status"
                                                   Source="{Binding StatusImage, UpdateSourceTrigger=PropertyChanged}"
                                                   Width="20"
                                                   Height="20" Stretch="None" ToolTip="{Binding StatusMessage}" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Name"
                                                Width="135" x:Name="Lvgvc_Name">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name, Mode=OneTime}"
                                                       Style="{StaticResource BoldGridViewCellStyle}" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="URL" Width="400">

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Url, Mode=OneTime}"
                                                       ToolTip="Double-click to open" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Similarity"
                                                DisplayMemberBinding="{Binding Result.Similarity, Mode=OneTime}"
                                                Width="75" />

                                <GridViewColumn Header="Description"
                                                Width="150" x:Name="Lvgvc_Desc">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Result.Description, Mode=OneTime}"
                                                       TextWrapping="Wrap" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Artist"
                                                DisplayMemberBinding="{Binding Result.Artist, Mode=OneTime}"
                                                Width="75" />

                                <GridViewColumn Header="Title"
                                                Width="75" x:Name="Lvgvc_Title">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Result.Title, Mode=OneTime}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>-->

                                <GridViewColumn Header="Status">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image x:Name="Img_Status"
                                                   Source="{Binding StatusImage, UpdateSourceTrigger=PropertyChanged}"
                                                   Width="20"
                                                   Height="20" Stretch="None" ToolTip="{Binding StatusMessage}" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Name"
                                                Width="135" x:Name="Lvgvc_Name"
                                                DisplayMemberBinding="{Binding Name, Mode=OneTime}">
                                    <!--
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name, Mode=OneTime}"
                                                       Style="{StaticResource BoldGridViewCellStyle}" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                -->
                                </GridViewColumn>

                                <GridViewColumn Header="URL" Width="400"
                                                DisplayMemberBinding="{Binding Url, Mode=OneTime}" />

                                <GridViewColumn Header="Similarity"
                                                DisplayMemberBinding="{Binding Result.Similarity, Mode=OneTime}"
                                                Width="75" />

                                <GridViewColumn Header="Description"
                                                Width="150" x:Name="Lvgvc_Desc"
                                                DisplayMemberBinding="{Binding Result.Description, Mode=OneTime}" />

                                <GridViewColumn Header="Artist"
                                                DisplayMemberBinding="{Binding Result.Artist, Mode=OneTime}"
                                                Width="75" />

                                <GridViewColumn Header="Title"
                                                Width="75" x:Name="Lvgvc_Title"
                                                DisplayMemberBinding="{Binding Result.Title, Mode=OneTime}" />

                                <GridViewColumn Header="Source"
                                                DisplayMemberBinding="{Binding Result.Source, Mode=OneTime}" Width="75" />

                                <GridViewColumn Header="Character"
                                                DisplayMemberBinding="{Binding Result.Character, Mode=OneTime}"
                                                Width="75" />

                                <GridViewColumn Header="Site"
                                                DisplayMemberBinding="{Binding Result.Site, Mode=OneTime}" Width="75" />

                                <GridViewColumn Header="Width"
                                                DisplayMemberBinding="{Binding Width}" Width="50" />

                                <GridViewColumn Header="Height"
                                                DisplayMemberBinding="{Binding Height}" Width="50" />

                                <GridViewColumn Header="Cache"
                                                DisplayMemberBinding="{Binding Properties, Converter={StaticResource DefaultEnumFlagsToStringConverter}, 
                                    Mode=Default, UpdateSourceTrigger=PropertyChanged}"
                                                Width="50">

                                    <!--
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Properties}"
                                                       ToolTip="{Binding Label}" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                    -->

                                </GridViewColumn>

                                <!--<GridViewColumn Header="*"
                                                DisplayMemberBinding="{Binding IsSister, Converter={StaticResource CYesNo2}}"
                                                Width="20" />-->

                            </GridView>
                        </ListView.View>

                    </ListView>

                    <TextBlock x:Name="Tb_Status" HorizontalAlignment="Left" Margin="30,96,0,0"
                               VerticalAlignment="Top" Foreground="White" FontStyle="Italic"
                               Text="{Binding CurrentQuery.Status, UpdateSourceTrigger=PropertyChanged, ElementName=Wnd_Main}"
                               Grid.Column="1" Grid.Row="1" />

                    <!--
                    <TextBlock x:Name="Tb_Status2" HorizontalAlignment="Left" Margin="95,28,0,0"
                               VerticalAlignment="Top" Foreground="White" Grid.Row="1" TextDecorations="Underline"
                               Text="{Binding CurrentQuery.Status2, UpdateSourceTrigger=PropertyChanged,ElementName=Wnd_Main}"
                               MaxWidth="400" />
                               -->

                    <Image x:Name="Img_Type" Width="20px" Height="20px" Stretch="None" Margin="48,5,0,0"
                           HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" />

                    <Button x:Name="Btn_Filter" Content="Filter" HorizontalAlignment="Left" Margin="589,0,0,0"
                            VerticalAlignment="Center" Click="Btn_Filter_Click"
                            IsEnabled="{Binding CurrentQuery.IsComplete}" Grid.ColumnSpan="2" />

                    <TextBox x:Name="Tb_Search" HorizontalAlignment="Right" Margin="0,46,499,0" Grid.Row="1"
                             TextWrapping="Wrap" VerticalAlignment="Top" Width="158"
                             TextChanged="Tb_Search_TextChanged" Grid.ColumnSpan="2" />

                    <ComboBox x:Name="Cb_SearchFields" HorizontalAlignment="Right" Margin="0,17,499,0" Grid.Row="1"
                              VerticalAlignment="Top" Width="148" Grid.ColumnSpan="2" />

                    <TextBlock x:Name="Tb_Preview" Grid.Column="1" HorizontalAlignment="Right" Margin="0,65,11,0"
                               Grid.Row="1" VerticalAlignment="Top" TextDecorations="Underline" Foreground="White"
                               TextWrapping="Wrap"
                               Width="150" ToolTip="Click preview to stop/close&#x0a;Double click preview to open"
                               Height="34.5" />

                    <TextBlock x:Name="Tb_Label" Grid.Column="1" HorizontalAlignment="Right" Margin="0,65,174,0"
                               FontStyle="Italic"
                               Grid.Row="1" VerticalAlignment="Top" Foreground="White" TextWrapping="WrapWithOverflow"
                               Width="320"
                               Text="{Binding CurrentResult.Label, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Height="35" />

                    <ProgressBar x:Name="Pb_Preview" Grid.Column="1" HorizontalAlignment="Right" Height="10"
                                 Margin="0,105,174,0" Grid.Row="1" VerticalAlignment="Top" Width="320"
                                 Value="{Binding CurrentResult.PreviewProgress}" />

                    <Label x:Name="Lb_SelMainUrl" Content="Item" HorizontalAlignment="Left" Margin="4,59,0,0"
                           VerticalAlignment="Top" Height="26" Foreground="White"
                           Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Width="55"
                           HorizontalContentAlignment="Center"
                           Grid.Row="1" FontWeight="Bold" />

                    <TextBox x:Name="Tb_SelMainUrl" HorizontalAlignment="Left" Margin="64,61,0,0"
                             VerticalAlignment="Top" Width="435" IsReadOnly="True" Height="20" Foreground="White"
                             Background="Black"
                             Text="{Binding CurrentResult.Result.Url, Converter={StaticResource urlConverter}, ElementName=Wnd_Main, Mode=OneWay, 
                        UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Preview result URL"
                             Grid.Row="1" MouseDoubleClick="Tb_SelUrl_MouseDoubleClick" />

                    <Label x:Name="Lb_SelInfo" Content="Info" HorizontalAlignment="Left" Margin="4,87,0,0"
                           VerticalAlignment="Top" Height="26" FontWeight="Bold" Foreground="White"
                           Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                           HorizontalContentAlignment="Center" Width="55"
                           Grid.Row="1" />

                    <TextBox x:Name="Tb_SelInfo_Info" HorizontalAlignment="Left" Margin="64,89,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="130" IsReadOnly="True" Height="20" Background="Black"
                             Foreground="White" TextAlignment="Center"
                             Text="{Binding CurrentResult.Result.Root.Status, ElementName=Wnd_Main, FallbackValue={x:Null}, IsAsync=True, Mode=OneWay, 
                        UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Preview image info"
                             Grid.Row="1" />

                    <TextBox x:Name="Tb_SelInfo_Size" HorizontalAlignment="Left" Margin="217,89,0,0"
                             TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="130" IsReadOnly="True" Height="20" Background="Black"
                             Foreground="White" TextAlignment="Center"
                             Text="{Binding CurrentResult.Size, Converter={StaticResource unitConverter}, FallbackValue={x:Null}, Mode=OneWay, IsAsync=True,
                        UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Preview image size"
                             Grid.Row="1" />

                    <TextBox x:Name="Tb_SelInfo_Dim" HorizontalAlignment="Left" Margin="369,89,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="130" IsReadOnly="True" Height="20" Background="Black"
                             Foreground="White" TextAlignment="Center"
                             Text="{Binding CurrentResult, Converter={StaticResource ImageDimensionConverter}, ElementName=Wnd_Main, IsAsync=True, Mode=OneWay, FallbackValue={x:Null},
                        UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Preview image dimensions"
                             Grid.Row="1" />

                    <Label x:Name="Lb_SelPrevUrl" Content="Preview" HorizontalAlignment="Left" Margin="4,31,0,0"
                           VerticalAlignment="Top" Height="26" Foreground="White"
                           Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Width="55"
                           HorizontalContentAlignment="Center"
                           Grid.Row="1" FontWeight="Bold" />

                    <TextBox x:Name="Tb_SelPrevUrl" HorizontalAlignment="Left" Margin="64,34,0,0"
                             VerticalAlignment="Top" Width="434" IsReadOnly="True" Height="20" Foreground="White"
                             Background="Black"
                             Text="{Binding CurrentResult.Result.Thumbnail, Converter={StaticResource urlConverter}, ElementName=Wnd_Main, Mode=OneWay, 
                        UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Preview image URL"
                             Grid.Row="1" MouseDoubleClick="Tb_SelPrevUrl_MouseDoubleClick" />

                </Grid>
            </TabItem>
            <TabItem x:Name="Ti_Config" HorizontalAlignment="Center" Height="20" Header="Config"
                     VerticalAlignment="Center" Width="54">
                <Grid Background="{DynamicResource Black1}">
                    <ListBox x:Name="Lb_Engines" d:ItemsSource="{Binding Engines}" Margin="27,33,0,0"
                             SelectionMode="Multiple" SelectionChanged="Lb_Engines_SelectionChanged" Width="175"
                             VerticalAlignment="Top" HorizontalAlignment="Left" Height="400" />

                    <ListBox x:Name="Lb_Engines2" d:ItemsSource="{Binding Engines}" Margin="228,33,0,0"
                             SelectionMode="Multiple" SelectionChanged="Lb_Engines2_SelectionChanged" Width="175"
                             HorizontalAlignment="Left" VerticalAlignment="Top" Height="400" />

                    <CheckBox x:Name="Cb_Clipboard" Content="Clipboard"
                              IsChecked="{Binding Path=UseClipboard, Mode=TwoWay}" HorizontalAlignment="Left"
                              Margin="425,35,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_AutoSearch" Content="Auto-search"
                              IsChecked="{Binding Path=Config.AutoSearch, Mode=TwoWay}" HorizontalAlignment="Left"
                              Margin="425,65,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_OpenRaw" Content="Open raw"
                              IsChecked="{Binding Path=Config.OpenRaw, Mode=TwoWay}" HorizontalAlignment="Left"
                              Margin="425,95,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_Cookies" Content="Read cookies" HorizontalAlignment="Left"
                              IsChecked="{Binding Config.ReadCookies, Mode=TwoWay}"
                              Margin="425,125,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_ContextMenu" Content="Context menu" HorizontalAlignment="Left"
                              IsChecked="{Binding Path=UseContextMenu, Mode=TwoWay}"
                              Margin="425,155,0,0" VerticalAlignment="Top" Foreground="White" />

                    <CheckBox x:Name="Cb_Path" Content="Add to PATH" HorizontalAlignment="Left"
                              IsChecked="{Binding InPath, Mode=TwoWay}"
                              Margin="425,185,0,0" VerticalAlignment="Top" Foreground="White" />

                    <Label x:Name="Lbl_SearchEngines" Content="Search Engines" HorizontalAlignment="Left"
                           Margin="27,2,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />

                    <Label x:Name="Lbl_PriorityEngines" Content="Priority Engines" HorizontalAlignment="Left"
                           Margin="228,2,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />

                    <ComboBox x:Name="Cm_UploadEngine" HorizontalAlignment="Center" Margin="0,34,0,0"
                              VerticalAlignment="Top" Width="120"
                              ItemsSource="{Binding Path=UploadEngineNames}"
                              SelectionChanged="Cm_UploadEngine_SelectionChanged" />

                    <Label x:Name="Lbl_Options" Content="Options" HorizontalAlignment="Left"
                           Margin="426,3,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />

                    <Label x:Name="Lbl_UploadEngines" Content="Upload Engine" HorizontalAlignment="Left"
                           Margin="600,3,0,0" VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />

                    <!--<TextBox x:Name="Tb_HyEndpoint" HorizontalAlignment="Left" Margin="527,297,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="120"
                             Text="{Binding Config.HydrusEndpoint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:IsHidden="True" />
                    <TextBox x:Name="Tb_HyKey" HorizontalAlignment="Left" Margin="527,326,0,0" TextWrapping="Wrap"
                             VerticalAlignment="Top" Width="120"
                             Text="{Binding Config.HydrusKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:IsHidden="True" />
                    <Label x:Name="Lb_HyEndpoint" Content="Hydrus Endpoint" HorizontalAlignment="Left"
                           Margin="424,293,0,0"
                           VerticalAlignment="Top" Foreground="White" d:IsHidden="True" />
                    <Label x:Name="Lb_HyKey" Content="Hydrus Key" HorizontalAlignment="Left" Margin="424,322,0,0"
                           VerticalAlignment="Top" Foreground="White" d:IsHidden="True" />-->

                </Grid>
            </TabItem>
            <TabItem x:Name="Ti_Info" HorizontalAlignment="Center" Height="20" Header="Info" VerticalAlignment="Center"
                     Width="54">
                <Grid Background="{DynamicResource Black1}">
                    <Label x:Name="Lb_Version" Content="Current version" HorizontalAlignment="Left" Margin="10,21,0,0"
                           VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />
                    <TextBlock x:Name="Tb_Version" HorizontalAlignment="Left" Margin="112,26,0,0" TextWrapping="Wrap"
                               VerticalAlignment="Top" Foreground="White" Width="115" />
                    <Button x:Name="Btn_OpenFolder" Content="Open program folder" HorizontalAlignment="Left"
                            Margin="10,162,0,0" VerticalAlignment="Top" Click="Btn_OpenFolder_Click" />
                    <ListView x:Name="Lv_Logs" ItemsSource="{Binding Logs}"
                              Foreground="White"
                              Background="{DynamicResource Black2}"
                              Margin="0,193,0,0">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Time" Width="75" DisplayMemberBinding="{Binding Time}" />
                                <GridViewColumn Header="Message" Width="750" DisplayMemberBinding="{Binding Message}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Label x:Name="Lb_Version2" Content="Latest version" HorizontalAlignment="Left" Margin="10,52,0,0"
                           VerticalAlignment="Top" Foreground="White" FontWeight="Bold" />
                    <TextBlock x:Name="Tb_Version2" HorizontalAlignment="Left" Margin="103,57,0,0" TextWrapping="Wrap"
                               VerticalAlignment="Top" Foreground="White" Width="124" />
                    <Button x:Name="Btn_OpenWiki" Content="Open wiki" HorizontalAlignment="Left" Margin="10,132,0,0"
                            VerticalAlignment="Top" Width="70" Click="Btn_OpenWiki_Click" />
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
<!-- ReSharper restore XamlBindingWithoutMode -->